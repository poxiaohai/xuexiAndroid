// This file was generated by PermissionsDispatcher. Do not modify!
package com.example.cheng.android.google;

import android.support.v4.app.ActivityCompat;
import java.lang.Override;
import java.lang.String;
import java.lang.ref.WeakReference;
import permissions.dispatcher.PermissionRequest;
import permissions.dispatcher.PermissionUtils;

final class GoogleActivityPermissionsDispatcher {
  private static final int REQUEST_STARTLOCATION = 0;

  private static final String[] PERMISSION_STARTLOCATION = new String[] {"android.permission.ACCESS_FINE_LOCATION"};

  private GoogleActivityPermissionsDispatcher() {
  }

  static void startLocationWithCheck(GoogleActivity target) {
    if (PermissionUtils.hasSelfPermissions(target, PERMISSION_STARTLOCATION)) {
      target.startLocation();
    } else {
      if (PermissionUtils.shouldShowRequestPermissionRationale(target, PERMISSION_STARTLOCATION)) {
        target.showWhy(new StartLocationPermissionRequest(target));
      } else {
        ActivityCompat.requestPermissions(target, PERMISSION_STARTLOCATION, REQUEST_STARTLOCATION);
      }
    }
  }

  static void onRequestPermissionsResult(GoogleActivity target, int requestCode,
      int[] grantResults) {
    switch (requestCode) {
      case REQUEST_STARTLOCATION:
      if (PermissionUtils.getTargetSdkVersion(target) < 23 && !PermissionUtils.hasSelfPermissions(target, PERMISSION_STARTLOCATION)) {
        target.showDeined();
        return;
      }
      if (PermissionUtils.verifyPermissions(grantResults)) {
        target.startLocation();
      } else {
        if (!PermissionUtils.shouldShowRequestPermissionRationale(target, PERMISSION_STARTLOCATION)) {
          target.showNotAsk();
        } else {
          target.showDeined();
        }
      }
      break;
      default:
      break;
    }
  }

  private static final class StartLocationPermissionRequest implements PermissionRequest {
    private final WeakReference<GoogleActivity> weakTarget;

    private StartLocationPermissionRequest(GoogleActivity target) {
      this.weakTarget = new WeakReference<GoogleActivity>(target);
    }

    @Override
    public void proceed() {
      GoogleActivity target = weakTarget.get();
      if (target == null) return;
      ActivityCompat.requestPermissions(target, PERMISSION_STARTLOCATION, REQUEST_STARTLOCATION);
    }

    @Override
    public void cancel() {
      GoogleActivity target = weakTarget.get();
      if (target == null) return;
      target.showDeined();
    }
  }
}
